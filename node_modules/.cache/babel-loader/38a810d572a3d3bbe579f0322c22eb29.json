{"ast":null,"code":"var _jsxFileName = \"/home/oem/Danz1n/Prova/2020-clock/clock/src/components/Clock/WorldClock.js\";\nimport React from 'react';\n\nclass WorldClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n      isLoaded: true\n    });\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  render() {\n    let {\n      date,\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"World Clock is Loading...\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"World Clock is \", date.toLocaleTimeString(), \".\"));\n    }\n  }\n\n}\n\nexport default WorldClock;","map":{"version":3,"sources":["/home/oem/Danz1n/Prova/2020-clock/clock/src/components/Clock/WorldClock.js"],"names":["React","WorldClock","Component","constructor","props","state","date","Date","isLoaded","componentDidMount","timerID","setInterval","tick","setState","render","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADK;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDA,EAAAA,IAAI,GAAG;AACL,SAAKC,QAAL,CAAc;AACZP,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADM;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAd;AAIA,SAAKH,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAP,KAAb;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAI;AAAER,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAqB,KAAKH,KAA9B;;AACA,QAAI,CAACG,QAAL,EAAe;AACb,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADF;AAKD,KAND,MAMO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoBF,IAAI,CAACS,kBAAL,EAApB,MADF,CADF;AAKD;AACF;;AAtCoC;;AAyCzC,eAAed,UAAf","sourcesContent":["import React from 'react';\n\nclass WorldClock extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        date: new Date(),\n        isLoaded: false\n      };\n    }\n    componentDidMount() {\n      this.timerID = setInterval(\n        () => this.tick(),\n        1000\n      );\n    }\n  \n    tick() {\n      this.setState({\n        date: new Date(),\n        isLoaded: true\n      });\n      this.state = {date: new Date()};\n    }\n  \n    render() {\n      let { date, isLoaded } = this.state;\n      if (!isLoaded) {\n        return (\n          <div>\n            <h2>World Clock is Loading...</h2>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <h2>World Clock is {date.toLocaleTimeString()}.</h2>\n          </div>\n        );\n      }\n    }\n}\n\nexport default WorldClock;"]},"metadata":{},"sourceType":"module"}